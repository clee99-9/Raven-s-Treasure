//code from wren that i haven't figured out yet
var l4EBBD26E_0;
l4EBBD26E_0 = keyboard_check(ord("Z"));

if (l4EBBD26E_0)
{
    move_and_collide(xinput*Var_RavenFlySpeed, yinput*Var_RavenFlySpeed, obj_objplaceholder,4,0,0,-1,-1);

    image_speed = 3;
}

else
{
    sprite_index = spr_Gary_left;
    image_index = 0;

    image_speed = 0;

    move_and_collide(xinput*Var_RavenWalkSpeed, yinput*Var_RavenWalkSpeed, obj_shortobjectplaceholder,4,0,0,-1,-1);

    var l1ED84449_0 = instance_place(x + 0, y + 0, [obj_objplaceholder]);
if ((l1ED84449_0 > 0))
{
    x += -(xinput*Var_RavenWalkSpeed);
y += -(yinput*Var_RavenWalkSpeed);
}
}


//PLACEHOLDER WITH MY DOODOO CODE
// STEP
var up = keyboard_check(ord("W") ) || keyboard_check(vk_up);
var down = keyboard_check(ord("S")) || keyboard_check(vk_down);
var left = keyboard_check(ord("A")) || keyboard_check(vk_left);
var right = keyboard_check(ord("D")) || keyboard_check(vk_right);
var xinput = right - left;
var yinput = down - up;

//Controls
if keyboard_check(ord("W")) || keyboard_check(vk_up)
	{
	sprite_index = spr_Gary_up; //move up look up
	obj_Gary.y -= 2;
	image_speed = 2;
	}
	if keyboard_check(ord("S")) || keyboard_check(vk_down)
	{
	sprite_index = spr_Gary_down;//move down look down
	obj_Gary.y += 2;
	image_speed = 2;
	}
	if keyboard_check(ord("A")) || keyboard_check(vk_left)
	{
	sprite_index = spr_Gary_left;//move left look left
	obj_Gary.x -= 2;
	image_speed = 2;
	}
	if keyboard_check(ord("D")) || keyboard_check(vk_right)
	{
	sprite_index = spr_Gary_right;//move right look right
	obj_Gary.x += 2;
	image_speed = 2;
}
	if keyboard_check(vk_nokey)
{
	image_speed = 0;
	image_index = 0;
}


// Flying 
if (keyboard_check_pressed(vk_space)) {
    is_flying = !is_flying; // Toggle flying state
}

// Update sprite based on flying state
if (is_flying) {
	if keyboard_check(ord("W")) || keyboard_check(vk_up)
	sprite_index = spr_Gary_flying_up; //move up look up
	obj_Gary.y -= 2;
	image_speed = 2;
	}
	if keyboard_check(ord("S")) || keyboard_check(vk_down)
	{
	sprite_index = spr_Gary_flying_down;//move down look down
	obj_Gary.y += 2;
	image_speed = 2;
	}
	if keyboard_check(ord("A")) || keyboard_check(vk_left)
	{
	sprite_index = spr_Gary_flying_left;//move left look left
	obj_Gary.x -= 2;
	image_speed = 2;
	}
	if keyboard_check(ord("D")) || keyboard_check(vk_right)
	{
	sprite_index = spr_Gary_flying_right;//move right look right
	obj_Gary.x += 2;
	image_speed = 2;
	}

// Speed calculation
var xspd = (right - left) * RavenFlySpeed;
var yspd = (down - up) * RavenFlySpeed;

// Collisions
if (!is_flying) {
    // Normal movement with collisions
    if (!place_meeting(x + xspd, y, obj_objplaceholder)) { 
        xspd = 0; // Stop movement on x collision
    }
    if (!place_meeting(x, y + yspd, obj_objplaceholder)) {
        yspd = 0; // Stop movement on y collision
    }
    // Update position if not flying
    x += xspd;
    y += yspd;
} else {
    // If flying, move freely without collision checks
    x += xspd; // Allow horizontal movement
    y += yspd; // Allow vertical movement
}
	//CREATE
//Create event for Gary
xspd = 0;
yspd = 0;


// Set walk speed
RavenWalkSpeed = 2;

// Set flying speed
RavenFlySpeed = 2;
RavenFlying = 0;

is_flying = false; // State to check if player is flying
normal_sprite = spr_Gary; // normal sprite
flying_sprite = spr_Gary_flying; //Flying sprite
sprite_index = spr_Gary;  // Start with the normal sprite

//SET DEPTH TO ENSURE PLAYER IS ABOVE THE WALL
depth = -1; //ENSURE THIS IS LOWER THAN THE WALL'S DEPTH

